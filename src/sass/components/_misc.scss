@use '../abstracts/variables' as variables;
@use '../abstracts/mixins' as mixins;

.app-header {
  display: flex;
  flex-direction: row;
  justify-content: center;

  &__left,
  &__right {
    flex-grow: 1;
    border-top: 2px dotted rgba(255, 68, 0, 0.25); //! REMOVE !!!!!! TESTING !!!!!!
    border-left: 2px dotted rgba(255, 68, 0, 0.25); //! REMOVE !!!!!! TESTING !!!!!!
    border-right: 2px dotted rgba(255, 68, 0, 0.25); //! REMOVE !!!!!! TESTING !!!!!!
  }
}

.app-logo {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin-top: -6.5rem;

  &__image {
    width: 40rem;
    // z-index: 10;
  }

  &__title {
    margin-top: -4.2rem;
  }
}

.app-content {
  border: 2px dotted rgba(153, 205, 50, 0.4); //! REMOVE !!!!!! TESTING !!!!!!
  //height: 80rem;
  padding: 2rem;
}

.card-backs-content {
  //For the clickable backs
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  gap: 3rem;
}

.card-select {
  display: flex;
  flex-direction: column-reverse;
  align-items: center;
  gap: 0.75rem;
  cursor: pointer;

  &__image {
    background-size: cover;
    border-radius: variables.$card-radius;
    box-shadow: variables.$card-shadow;

    /*     &--char {
      @include mixins.card('char', 0);
    }
    &--eter {
      @include mixins.card('eter', 0);
    }
    &--loot {
      @include mixins.card('loot', 0);
    }
    &--mons {
      @include mixins.card('mons', 0);
    }
    &--room {
      @include mixins.card('room', 0);
    }
    &--soul {
      @include mixins.card('soul', 0);
    }
    &--tres {
      @include mixins.card('tres', 0);
    } */
  }

  /*   &__text {
    //cursor: pointer;
    text-shadow: 0px 4px 3px rgba(0, 0, 0, 0.4), 0px 8px 13px rgba(0, 0, 0, 0.1),
      0px 18px 23px rgba(0, 0, 0, 0.1);
    transition: transform 0.05s;
  } */

  &:hover > &__image {
    transform: rotate(-(variables.$card-deg));
    &:before {
      transform: rotate(variables.$card-deg);
    }
    &:after {
      transform: rotate(variables.$card-deg * 2);
    }
  }
  /*   &:hover > &__text {
    transform: scale(1.05);
    //transform: rotate(variables.$card-deg / 2);
  } */
}

.card-editor-content {
  display: grid;
  grid-template-columns: 1fr 2fr;
  gap: 2rem;

  & > div {
    //border: 2px dotted rgba(255, 255, 255, 0.05);
  }
  & div:first-of-type {
    //border-right-width: 1px;
  }
  & div:last-of-type {
    //border-left-width: 1px;
  }
}

.card-display {
  background-color: rgba(variables.$white, 0.5);
  border-radius: variables.$card-radius * 2;
  background-size: cover !important;
  box-shadow: variables.$card-shadow;
  position: relative;
  border: 1px solid rgba(variables.$black, 0.75);

  &:after {
    content: '';
    background: url('../assets/cards/fronts/char/blank.png');
    width: 100%;
    height: 100%;
    background-size: cover;
    position: absolute;
  }
}

.card-form .card-form__input-box {
  display: flex;
  flex-direction: column;
}

.card-form__input-label {
  font-size: 2rem;
  line-height: 0.75;
  margin-left: 0.5rem;
}

/* &__input {
  padding: 0.5rem;
  border: 1px solid variables.$bone;
  border-radius: 4px;
  background-color: variables.$background;
  color: var(--color-white);
} */

[type='text'] {
}
[type='number'] {
}
[type='checkbox'] {
}
[type='select'] {
  // border: 2px dotted rgba(137, 43, 226, 0.5); //! REMOVE !!!!!! TESTING !!!!!!
  background-size: cover;
  border-radius: variables.$card-radius;
  box-shadow: variables.$card-shadow;
  cursor: pointer;

  // &,
  // &:before,
  // &:after {
  //   border: 1px solid var(--color-black);
  // }

  /*   &--char {
    @include mixins.card('char', variables.$card-deg);
  }

  &--eter {
    @include mixins.card('eter', variables.$card-deg);
  }

  &--loot {
    @include mixins.card('loot', variables.$card-deg);
  }

  &--mons {
    @include mixins.card('mons', variables.$card-deg);
  }

  &--room {
    @include mixins.card('room', variables.$card-deg);
  }

  &--soul {
    @include mixins.card('soul', variables.$card-deg);
  }

  &--tres {
    @include mixins.card('tres', variables.$card-deg);
  }

  &--tres {
    @include mixins.card('tres', variables.$card-deg);
  }

  &--isa {
    @include mixins.cardDiff('isa', 'mons', variables.$card-deg);
  }

  &--mom {
    @include mixins.cardDiff('mom', 'mons', variables.$card-deg);
  }

  &--bum {
    @include mixins.cardDiff('bum', 'mons', variables.$card-deg);
  }

  &--lit {
    @include mixins.cardDiff('lit', 'mons', variables.$card-deg);
  }

  &--hus {
    @include mixins.cardDiff('hus', 'mons', variables.$card-deg);
  }

  &--del {
    @include mixins.cardDiff('del', 'mons', variables.$card-deg);
  } */
}
